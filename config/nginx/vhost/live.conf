server {
  listen 8081;
  listen [::]:8081;

  root /app/fis.1965.or.id;

  index index.html;

  server_name fis.1965.or.id;

  location / {
    try_files $uri $uri/ @rewrites;

    # Simple requests
    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  *;
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  *;
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
      return 200;
    }
  }

  location @rewrites {
    rewrite ^(.+)$ /index.html last;
  }

  location ~* \.(?:ico)$ {
    expires 30d;
    add_header Cache-Control public;
    access_log off;
  }
  
  # css and js are tokenized
  location ~* \.(?:css|js) {
    expires 30d;
    add_header Cache-Control public;
    access_log off;
  }
  
  # nginx gzip_static does not add Vary header for fonts. 
  location ~* \.(?:eot|ttf|svg)$ {
    expires 30d;
    add_header Vary Accept-Encoding;
    add_header Cache-Control public;
    access_log off;
  }
  
  # woff fonts should not be zipped.
  location ~* \.(?:woff)$ {
    expires 30d;
    add_header Cache-Control public;
    access_log off;
  }
  
  # tokenized images can be cached forever 
  location ~* "\.([a-z0-9]{8})\.(?:gif|png|jpe?g)$" {
    expires 30d;
    add_header Cache-Control public;
    access_log off;
  }
  
  # non tokenized images only cache for 1 week as they are in my context subject to change.
  location ~* \.(?:gif|png|jpe?g)$ {
    expires 1w;
    add_header Cache-Control public;
    access_log off;
  }
}
